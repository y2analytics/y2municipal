{{ assign_oe }}
)
dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
length(oe_vars)
# Adding these for testing
devtools::load_all()
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
assign_oe = NULL
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
dataset %>%
dplyr::select(tidyselect::all_of(oe_vars)) %>%
y2clerk::verbatims_y2()
class(oe_vars)
length(oe_vars)
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
expect_error(
topline_appendix(dataset),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
test_that("Error - no variables", {
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
expect_error(
topline_appendix(dataset),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
})
test_that("Warnings", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset),
'You are working with variables that have no labeling. You may want to consider adding a prompt before continuing'
)
})
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset),
'You are working with variables that have no labeling. You may want to consider adding a prompt before continuing'
)
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
length(oe_vars)
length(oe_vars == 0)
devtools::test_active_file()
test_that("Pulls right variables", {
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_2 = NA_real_,
m_var_3 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
n_var = 875,
r_var_1 = 1,
r_var_2 = 2,
r_var_3 = 3,
md_var_1 = 1,
md_var_2 = NA_real_,
md_var_3 = 1,
M_RACE_1 = 'white',
M_RACE_2 = 'black',
q1 = 'a not correctly named question',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
vars_freqd <- topline_appendix(dataset) %>%
dplyr::select(variable) %>%
purrr::as_vector() %>%
as.character()
expect_equal(
vars_freqd,
c('oe_var', 'm_var_3_TEXT')
)
})
# Adding these for testing
devtools::load_all()
topline_appendix <- function(
dataset,
assign_oe = NULL
) {
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
dataset %>%
dplyr::select(tidyselect::all_of(oe_vars)) %>%
y2clerk::verbatims_y2()
}
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
expect_error(
topline_appendix(dataset),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
test_that("Error - no variables", {
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
expect_error(
topline_appendix(dataset),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
})
test_that("Warnings", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset),
'You are working with variables that have no labeling. You may want to consider adding a prompt before continuing'
)
})
test_that("Pulls right variables", {
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_2 = NA_real_,
m_var_3 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
n_var = 875,
r_var_1 = 1,
r_var_2 = 2,
r_var_3 = 3,
md_var_1 = 1,
md_var_2 = NA_real_,
md_var_3 = 1,
M_RACE_1 = 'white',
M_RACE_2 = 'black',
q1 = 'a not correctly named question',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
vars_freqd <- topline_appendix(dataset) %>%
dplyr::select(variable) %>%
purrr::as_vector() %>%
as.character()
expect_equal(
vars_freqd,
c('oe_var', 'm_var_3_TEXT')
)
})
test_that("correct output formatting", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
oe_2 = 'a not correctly named question'
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
labelled::var_label(dataset$oe_2) <- 'Write some stuff again'
frequencies <- topline_appendix(dataset)
expect_equal(
class(frequencies),
c('tbl_df', 'tbl', 'data.frame')
)
expect_equal(
names(frequencies),
c('variable', 'prompt', 'label')
)
expect_equal(
frequencies %>% dplyr::pull(label),
c('a lot of text', 'a not correctly named question', 'Other text')
)
})
test_that("assign_oe argument", {
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
q1 = 'a not correctly named question',
q2 = 'and another',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
labelled::var_label(dataset$q1) <- 'question prompt'
labelled::var_label(dataset$q2) <- 'question prompt pt 2'
vars_freqd <- topline_appendix(
dataset,
assign_oe = c(q1, q2)
) %>%
dplyr::select(variable) %>%
purrr::as_vector() %>%
as.character()
expect_equal(
vars_freqd,
c('oe_var', 'm_var_3_TEXT', 'q1', 'q2')
)
})
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
assign_oe = NULL
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
dataset %>%
dplyr::select(tidyselect::all_of(oe_vars)) %>%
y2clerk::verbatims_y2()
length(oe_vars)
length(oe_vars)
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
topline_appendix(dataset %>% dplyr::select(-dplyr::everything()))
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_2 = NA_real_,
m_var_3 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
n_var = 875,
r_var_1 = 1,
r_var_2 = 2,
r_var_3 = 3,
md_var_1 = 1,
md_var_2 = NA_real_,
md_var_3 = 1,
M_RACE_1 = 'white',
M_RACE_2 = 'black',
q1 = 'a not correctly named question',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
topline_appendix(dataset)
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars == 0)) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
if (length(oe_vars) == 0) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
topline_appendix <- function(
dataset,
assign_oe = NULL
) {
oe_vars <- dataset %>%
dplyr::select(
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT'),
{{ assign_oe }}
) %>%
names()
if (length(oe_vars) == 0) {
stop('You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.')
}
dataset %>%
dplyr::select(tidyselect::all_of(oe_vars)) %>%
y2clerk::verbatims_y2()
}
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
test_that("Error - no variables", {
dataset <- tibble::tibble(
m_var_3_TEST = 'Other text',
q_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset %>% dplyr::select(-dplyr::everything())),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
expect_error(
topline_appendix(dataset),
'You currently have no variables specified OR no variables starting with "oe_" or ending with "_TEXT." Please either list out the variables you wish to include or check if your variables have the correct prefixes/suffixes.'
)
})
test_that("Warnings", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
expect_error(
topline_appendix(dataset),
'You are working with variables that have no labeling. You may want to consider adding a prompt before continuing'
)
})
test_that("Warnings", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text'
)
expect_warning(
topline_appendix(dataset),
'You are working with variables that have no labeling. You may want to consider adding a prompt before continuing'
)
})
test_that("Pulls right variables", {
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_2 = NA_real_,
m_var_3 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
n_var = 875,
r_var_1 = 1,
r_var_2 = 2,
r_var_3 = 3,
md_var_1 = 1,
md_var_2 = NA_real_,
md_var_3 = 1,
M_RACE_1 = 'white',
M_RACE_2 = 'black',
q1 = 'a not correctly named question',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
vars_freqd <- topline_appendix(dataset) %>%
dplyr::select(variable) %>%
purrr::as_vector() %>%
as.character()
expect_equal(
vars_freqd,
c('oe_var', 'm_var_3_TEXT')
)
})
test_that("correct output formatting", {
dataset <- tibble::tibble(
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
oe_2 = 'a not correctly named question'
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
labelled::var_label(dataset$oe_2) <- 'Write some stuff again'
frequencies <- topline_appendix(dataset)
expect_equal(
class(frequencies),
c('tbl_df', 'tbl', 'data.frame')
)
expect_equal(
names(frequencies),
c('variable', 'prompt', 'label')
)
expect_equal(
frequencies %>% dplyr::pull(label),
c('a lot of text', 'a not correctly named question', 'Other text')
)
})
test_that("assign_oe argument", {
dataset <- tibble::tibble(
s_var = 1,
m_var_1 = 1,
m_var_3_TEXT = 'Other text',
oe_var = 'a lot of text',
q1 = 'a not correctly named question',
q2 = 'and another',
weights = 2.1
)
labelled::var_label(dataset$m_var_3_TEXT) <- 'Specify the thing'
labelled::var_label(dataset$oe_var) <- 'Write some stuff'
labelled::var_label(dataset$q1) <- 'question prompt'
labelled::var_label(dataset$q2) <- 'question prompt pt 2'
vars_freqd <- topline_appendix(
dataset,
assign_oe = c(q1, q2)
) %>%
dplyr::select(variable) %>%
purrr::as_vector() %>%
as.character()
expect_equal(
vars_freqd,
c('oe_var', 'm_var_3_TEXT', 'q1', 'q2')
)
})
devtools::test_active_file()
# Data Prep ---------------------------------------------------------------
library(haven)
library(tidyverse)
library(y2clerk)
library(orderlabel)
library(y2municipal)
FILE_PATH <- "~/Y2 Analytics Dropbox/Y2 Analytics Team Folder/Active Projects_SR/SX Research/"
DATA_PATH <- (str_c(FILE_PATH, "Data/"))
# Read in survey sav and take out looped questions
responses_og <- read_sav(str_c(DATA_PATH,
"Pre-Enrollment SX Full Data.sav"))
responses <- responses_og %>%
select(-contains("_s1"),
-contains("_s2"),
-contains("_s3"),
-contains("m_apply_consider"),
-contains("m_apply_actual"),
-contains("m_accepted"),
-s_attend,
-m_apply_consider_IDs:-randomized_subset)
responses_names <- taking_names(responses)
# Read in tall data
tall_data <- read_rds(str_c(DATA_PATH,
"tall data 05122023.rds"))
topline_data_tall <- topline_freqs(tall_data)
topline_data_sav <- topline_freqs(responses)
View(responses_names)
names_og <- taking_names(repsonses_og)
names_og <- taking_names(responses_og)
View(names_og)
responses <- responses_og %>%
select(-contains("_s1"),
-contains("_s2"),
-contains("_s3"),
-contains("m_apply_consider"),
-contains("m_apply_actual"),
-contains("m_accepted"),
-s_attend,
# -m_apply_consider_IDs:-randomized_subset
)
topline_data_sav <- topline_freqs(responses)
responses <- responses_og %>%
select(-contains("_s1"),
-contains("_s2"),
-contains("_s3"),
-contains("m_apply_consider"),
-contains("m_apply_actual"),
-contains("m_accepted"),
-s_attend,
-m_apply_consider_IDs:-randomized_subset
)
topline_data_sav <- topline_freqs(responses)
